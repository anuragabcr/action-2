name: Solar system workflow

on: 
    workflow_dispatch: 
    push: 
        branches: 
            - main
            - github_actions

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit testing
        strategy:
          matrix:
            nodejs_version: [18, 20]
            os: [ubuntu-latest]
            exclude:
              - nodejs_version: 18
                os: macos-latest
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup node JS version - ${{ matrix.nodejs_version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.nodejs_version }}

            - name: Cache NPM dependencies
              uses: actions/cache@v3
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
            - name: Install dependices
              run: npm install

            - name: Unit testing
              id: nodejs-unit-testing-step
              run: npm test

            - name: Archive test result
              if: always()
              uses: actions/upload-artifact@v3
              with:
                name: Mocha-Test-Result
                path: test-results.xml

    code-coverage:
      name: Code coverage
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Setup nodejs version - 18
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: install dependencies
          run: npm install

        - name: Check code coverage
          continue-on-error: true
          run: npm run coverage

        - name: Archive test result
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Dockerhub Login
          uses: docker/login-action@v2.2.0
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        - name: Docker build for testing
          uses: docker/build-push-action@v5
          with:
            context: .
            push: false
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

        - name: Docker Image test
          run: |
            docker images
            docker run --name solar-system-app -d -p 3000:3000 \
              -e MONGO_URI=$MONGO_URI -e MONGO_USERNAME=$MONGO_USERNAME -e MONGO_PASSWORD=$MONGO_PASSWORD \
              ${{ secrets.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            export IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP
            echo Testing Image URL using wget
            wget -q -O - 127.0.0.1:3000/live | grep live

            
